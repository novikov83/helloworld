# Имя может быть любое, но желательно без пробелов
name: CMake

on:
  push:
    tags: [ mater ]
    branches: [ master ]

# глобальные переменные
env:
  var: 10
  var_uniq: ${{ github.sha }}
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # build это просто имя - можно давать любое имя. Это будет название джоба. Каждый джоб запускается на своей виртуальной машине
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    # чекаут нашего проекта
    - uses: actions/checkout@v3

    # установка буста
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
    - run: cmake -B ${{github.workspace}}/build -DPATCH_VERSION=${{github.run_number}}
    - run: cmake --build ${{github.workspace}}/build
    - run: cmake --build ${{github.workspace}}/build --target package

    - name: Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DPATCH_VERSION=${{github.run_number}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build
      
    - name: Build DEB
      run: cmake --build ${{github.workspace}}/build --target package
      
    - name: List
      run: ls -la build
      
    - name: Create
      id: create
      uses: actions/create-release@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload 
      id: upload
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create.outputs.upload_url }}
        asset_path: ./build/helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package
          
  my-build:
    runs-on: ubuntu-latest
    # ждать завершения джоба build
    needs: [build]
    steps:
      # при помощи name обозначаем таски внутри джоба (они печатаются)
      - name: Hello Actions
        run: echo "Hello Actions"
#        run: echo "Git hash: ${{ env.var }} "
      
